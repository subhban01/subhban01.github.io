{"version":3,"sources":["store/recruiterInfo.ts","pages/App.tsx","store/checkoutDataStore.ts","adPricing.ts","components/PriceCard.tsx","pages/Pricing.tsx","components/Summary.tsx","reportWebVitals.ts","index.tsx","pages/CheckoutPage.tsx","utils/calculateTotal.ts"],"names":["useRecruiterInfoStore","create","devtools","set","get","data","setRecuiterInfo","setApplicableOffers","offers","App","history","useHistory","fnameRef","useRef","lnameRef","cnameRef","Paper","elevation","className","TextField","label","inputRef","Button","onClick","recruiterObj","firstName","current","value","lastName","companyName","push","variant","useCheckoutDataStore","setCheckoutData","offerings","title","desc","price","code","splPricing","secondBite","splOffer","splPrice","statement","axilCoffee","myer","PriceCard","props","countRef","Card","onChange","handleChange","type","Pricing","usecheckoutDataStore","useState","offerTexts","setofferTexts","checkoutArray","setCheckoutArray","useEffect","sPricing","offerStatement","customer","toUpperCase","replace","includes","trim","offer","map","item","index","count","itemCode","result","arr","i","length","Summary","productNames","setProductNames","names","itemArrays","productArray","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","exact","path","component","recruiterInfo","loading","setLoading","success","setSuccess","total","setTotal","timer","React","checkoutData","getState","appliedOffers","useRecruiterInfo","addedItems","itemList","concat","priceObj","addedItemsString","toString","offerString","regex","RegExp","Object","keys","split","forEach","parseFloat","Number","toFixed","calculateTotal","clearTimeout","window","setTimeout","disabled","CircularProgress","size","document","getElementById"],"mappings":"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","file":"static/js/main.7c573a13.chunk.js","sourcesContent":["import create from \"zustand\";\r\nimport { devtools } from \"zustand/middleware\";\r\nimport TypeRecruiterData from \"types/TypeRecruiterData\";\r\nimport { TypePricingData } from \"types/TypePricingData\";\r\n\r\ntype State = {\r\n  data: TypeRecruiterData | null;\r\n  offers?: TypePricingData[];\r\n  setRecuiterInfo: (data: TypeRecruiterData) => void;\r\n  setApplicableOffers: (offers: TypePricingData[]) => void;\r\n};\r\n\r\nconst useRecruiterInfoStore = create<State>(\r\n  devtools(\r\n    (set, get) => ({\r\n      data: null,\r\n      setRecuiterInfo: (data: TypeRecruiterData): void => set({ data }),\r\n      setApplicableOffers: (offers: TypePricingData[]): void => set({ offers }),\r\n    }),\r\n    \"recruiterInfo\"\r\n  )\r\n);\r\n\r\nexport default useRecruiterInfoStore;\r\n","import React, { useRef } from \"react\";\nimport \"styles/style.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport useRecruiterInfoStore from \"store/recruiterInfo\";\n\nfunction App() {\n  const history = useHistory();\n  const { setRecuiterInfo } = useRecruiterInfoStore();\n  const fnameRef = useRef<HTMLInputElement>();\n  const lnameRef = useRef<HTMLInputElement>();\n  const cnameRef = useRef<HTMLInputElement>();\n\n  function handleClick() {\n    const recruiterObj = {\n      firstName: fnameRef.current?.value || \"\",\n      lastName: lnameRef.current?.value || \"\",\n      companyName: cnameRef.current?.value || \"\",\n    };\n    setRecuiterInfo(recruiterObj);\n    history.push(\"/pricing\");\n  }\n\n  return (\n    <>\n      <header>Purchase job advert</header>\n      <Paper elevation={2} className=\"app-content\">\n        <label> Please enter details below:</label>\n        <TextField className=\"text\" label=\"First Name\" inputRef={fnameRef} />\n        <TextField className=\"text\" label=\"Last Name\" inputRef={lnameRef} />\n        <TextField className=\"text\" label=\"Company Name\" inputRef={cnameRef} />\n        <Button onClick={handleClick} variant=\"contained\">\n          Next\n        </Button>\n      </Paper>\n    </>\n  );\n}\n\nexport default App;\n","import create from \"zustand\";\r\nimport { devtools } from \"zustand/middleware\";\r\n\r\ntype State = {\r\n  data: string[][] | null;\r\n  setCheckoutData: (data: string[][]) => void;\r\n};\r\n\r\nconst useCheckoutDataStore = create<State>(\r\n  devtools(\r\n    (set, get) => ({\r\n      data: null,\r\n      setCheckoutData: (data: string[][]): void => set({ data }),\r\n    }),\r\n    \"checkoutData\"\r\n  )\r\n);\r\n\r\nexport default useCheckoutDataStore;\r\n","export const offerings = [\r\n  {\r\n    title: \"Classic Ad\",\r\n    desc: \"Offers the most basic level of advertisement\",\r\n    price: 269.99,\r\n    code: \"CA\",\r\n  },\r\n  {\r\n    title: \"Stand out Ad\",\r\n    desc: \"Allows advertisers to use a company logo and use a longer presentation text\",\r\n    price: 322.99,\r\n    code: \"SOA\",\r\n  },\r\n  {\r\n    title: \"Premium Ad\",\r\n    desc: \"Same benefits as Standout Ad, but also puts the advertisement at the top of the results, allowing higher visibility\",\r\n    price: 394.99,\r\n    code: \"PA\",\r\n  },\r\n];\r\n\r\nexport const splPricing = {\r\n  secondBite: [\r\n    {\r\n      splOffer: [\"CA\", \"CA\", \"CA\"],\r\n      splPrice: 269.99 * 2,\r\n      statement: \"Get a 3 for 2 deal on Classic Ads.\",\r\n    },\r\n  ],\r\n  axilCoffee: [\r\n    {\r\n      splOffer: [\"SOA\"],\r\n      splPrice: 299.99,\r\n      statement:\r\n        \"Get a discount on Stand out Ads where the price drops to $299.99 per ad.\",\r\n    },\r\n  ],\r\n  myer: [\r\n    {\r\n      splOffer: [\"SOA\", \"SOA\", \"SOA\", \"SOA\", \"SOA\"],\r\n      splPrice: 322.99 * 4,\r\n      statement: \"Get a 5 for 4 deal on Stand out Ads.\",\r\n    },\r\n    {\r\n      splOffer: [\"PA\"],\r\n      splPrice: 389.99,\r\n      statement:\r\n        \"Get a discount on Premium Ads where the price drops to $389.99 per ad.\",\r\n    },\r\n  ],\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\ninterface TypeProps {\r\n  title: string;\r\n  desc: string;\r\n  price: number;\r\n  handleChange: Function;\r\n}\r\n\r\nfunction PriceCard(props: TypeProps) {\r\n  const countRef = useRef<HTMLInputElement>();\r\n\r\n  const handleChange = () => {\r\n    props.handleChange(countRef.current?.value);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"price-card\">\r\n      <h2>{props.title}</h2>\r\n      <div>{props.desc}</div>\r\n      <div>\r\n        <strong>${props.price}</strong>\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          className=\"count\"\r\n          label=\"Count\"\r\n          inputRef={countRef}\r\n          onChange={handleChange}\r\n          type=\"number\"\r\n        />\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default PriceCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useRecruiterInfoStore from \"store/recruiterInfo\";\r\nimport usecheckoutDataStore from \"store/checkoutDataStore\";\r\nimport { splPricing, offerings } from \"adPricing\";\r\nimport { TypeSplPricingData } from \"types/TypePricingData\";\r\nimport PriceCard from \"components/PriceCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Pricing() {\r\n  const { data, setApplicableOffers } = useRecruiterInfoStore();\r\n  const { setCheckoutData } = usecheckoutDataStore();\r\n  const [offerTexts, setofferTexts] = useState(\"\");\r\n  const [checkoutArray, setCheckoutArray] = useState<string[][]>();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    //fetch pricing data from backend\r\n    const sPricing: TypeSplPricingData = splPricing;\r\n    let offerStatement = \"\\n\\n\";\r\n\r\n    for (const customer in sPricing) {\r\n      if (\r\n        data?.companyName\r\n          ?.toUpperCase()\r\n          .replace(/ /g, \"\")\r\n          .includes(customer?.trim().toUpperCase())\r\n      ) {\r\n        setApplicableOffers(sPricing[customer]);\r\n        for (const offer of sPricing[customer]) {\r\n          offerStatement += `${offer.statement}\\n`;\r\n        }\r\n        setofferTexts(offerStatement);\r\n      }\r\n    }\r\n  }, [data?.companyName, setApplicableOffers]);\r\n\r\n  const handleChange = (itemCode: string, count: number) => {\r\n    let result = checkoutArray ?? [];\r\n    let arr = [];\r\n    while (count > 0) {\r\n      arr.push(itemCode);\r\n      count--;\r\n    }\r\n\r\n    for (let i = 0; i < offerings.length; i++) {\r\n      switch (itemCode) {\r\n        case offerings[i].code:\r\n          result[i] = arr;\r\n          break;\r\n      }\r\n    }\r\n\r\n    setCheckoutArray(result);\r\n    setCheckoutData(result);\r\n  };\r\n\r\n  function handleClick() {\r\n    history.push(\"/checkout\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <header>Pricing</header>\r\n      {offerTexts && (\r\n        <div className=\"message\" data-testid=\"message\">\r\n          Hello {data?.firstName || \"user\"}, as a priviledged customer, we have\r\n          the below special pricing for you:\r\n          <strong>{`${offerTexts}\\n`}</strong>\r\n          [Final price will be shown in checkout section after you confirm\r\n          selection]\r\n        </div>\r\n      )}\r\n\r\n      <Paper elevation={2} className=\"paper\">\r\n        <label> Choose the ad type to best suit your needs:</label>\r\n        <div className=\"pricing-card-container\">\r\n          {offerings.map((item, index) => {\r\n            return (\r\n              <PriceCard\r\n                key={`${item.price}${index}`}\r\n                title={item.title}\r\n                desc={item.desc}\r\n                price={item.price}\r\n                handleChange={(count: number) => handleChange(item.code, count)}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <Button variant=\"contained\" onClick={handleClick}>\r\n          Checkout\r\n        </Button>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pricing;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { offerings } from \"adPricing\";\r\n\r\ninterface TypeProps {\r\n  itemArrays: string[][] | null;\r\n}\r\n\r\ninterface TypeStringIndexedObject {\r\n  [key: string]: string;\r\n}\r\n\r\nfunction Summary(props: TypeProps) {\r\n  let [productNames, setProductNames] = useState<TypeStringIndexedObject>({});\r\n\r\n  useEffect(() => {\r\n    let names: TypeStringIndexedObject = {};\r\n    for (const offer of offerings) {\r\n      names[offer.code] = offer.title;\r\n    }\r\n    setProductNames(names);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>Summary </h2>\r\n      {props.itemArrays?.map((productArray, i) => {\r\n        return (\r\n          <div className=\"summary-item\" key={`${productArray[0] + i}`}>\r\n            {productArray.length} x {productNames[productArray[0]]}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Summary;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./pages/App\";\r\nimport Pricing from \"./pages/Pricing\";\r\nimport CheckoutPage from \"./pages/CheckoutPage\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route path=\"/pricing\" component={Pricing} />\r\n        <Route path=\"/checkout\" component={CheckoutPage} />\r\n      </Switch>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Summary from \"components/Summary\";\r\nimport usecheckoutDataStore from \"store/checkoutDataStore\";\r\nimport recruiterInfo from \"store/recruiterInfo\";\r\nimport calculateTotal from \"utils/calculateTotal\";\r\n\r\nexport default function CheckoutPage() {\r\n  const { data } = usecheckoutDataStore();\r\n  const { offers } = recruiterInfo();\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [total, setTotal] = useState(0);\r\n  const timer = React.useRef<number>();\r\n\r\n  const handleButtonClick = () => {\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n      timer.current = window.setTimeout(() => {\r\n        setSuccess(true);\r\n        setLoading(false);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTotal(calculateTotal());\r\n    return () => {\r\n      clearTimeout(timer.current);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <header>Checkout</header>\r\n      <Paper elevation={2} className=\"paper\">\r\n        <Summary itemArrays={data} />\r\n        <h4>\r\n          Total: ${total}{\" \"}\r\n          <span>{offers ? \"(after applying relevant offers)\" : \"\"}</span>\r\n        </h4>\r\n        <Button\r\n          onClick={handleButtonClick}\r\n          className={success ? \"success\" : \"pay\"}\r\n          disabled={success}\r\n        >\r\n          {success ? \"Done\" : \"Make Payment\"}\r\n        </Button>\r\n        {loading && <CircularProgress size={24} className=\"button-progress\" />}\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import useRecruiterInfo from \"store/recruiterInfo\";\r\nimport useCheckoutDataStore from \"store/checkoutDataStore\";\r\nimport { offerings } from \"adPricing\";\r\n\r\nexport default function calculateTotal(): number {\r\n  const checkoutData = useCheckoutDataStore.getState().data;\r\n  const appliedOffers = useRecruiterInfo.getState().offers;\r\n  let total = 0;\r\n\r\n  if (checkoutData) {\r\n    //prepare flat array of all added items\r\n    let addedItems: string[] = [];\r\n    for (const itemList of checkoutData) {\r\n      addedItems = itemList ? addedItems.concat(itemList) : addedItems;\r\n    }\r\n\r\n    //prepare {itemcode: price} retail price object\r\n    let priceObj: { [key: string]: number } = {};\r\n    for (const offer of offerings) {\r\n      priceObj[offer.code] = offer.price;\r\n    }\r\n\r\n    if (appliedOffers) {\r\n      //replace offers with price in array\r\n      let addedItemsString = addedItems.toString();\r\n      for (const offer of appliedOffers) {\r\n        const offerString = offer.splOffer.toString();\r\n        const regex = new RegExp(offerString, \"g\");\r\n        addedItemsString = addedItemsString.replace(\r\n          regex,\r\n          offer.splPrice.toString()\r\n        );\r\n      }\r\n\r\n      //replace remaining items in array with retail price\r\n      for (const item of Object.keys(priceObj)) {\r\n        addedItemsString = addedItemsString.replace(\r\n          new RegExp(item, \"g\"),\r\n          priceObj[item].toString()\r\n        );\r\n      }\r\n      addedItemsString.split(\",\").forEach((price) => {\r\n        total += parseFloat(price);\r\n      });\r\n    } else {\r\n      for (const item of addedItems) {\r\n        total += priceObj[item];\r\n      }\r\n    }\r\n  }\r\n  return Number(total.toFixed(2));\r\n}\r\n"],"sourceRoot":""}